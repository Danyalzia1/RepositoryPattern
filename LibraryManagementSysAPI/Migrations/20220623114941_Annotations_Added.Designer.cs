// <auto-generated />
using System;
using LibraryManagementSysAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryManagementSysAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220623114941_Annotations_Added")]
    partial class Annotations_Added
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookMember", b =>
                {
                    b.Property<int>("BooksBookId")
                        .HasColumnType("int");

                    b.Property<int>("MembersId")
                        .HasColumnType("int");

                    b.HasKey("BooksBookId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("BookMember");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReturn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.BooksAssToMembers", b =>
                {
                    b.Property<int>("BomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("BomId");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookAssToMembers");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Librarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LibraryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LibraryID");

                    b.ToTable("Librarian");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Libarary");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LibrarianId")
                        .HasColumnType("int");

                    b.Property<string>("MContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MNoOfBookIssued")
                        .HasColumnType("int");

                    b.Property<string>("MType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LibrarianId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LibraryID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibraryID");

                    b.HasIndex("MemberID");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StaffId");

                    b.HasIndex("MemberID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RollNo")
                        .HasMaxLength(160)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("BookMember", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSysAPI.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Book", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Library", "Library")
                        .WithMany("Books")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.BooksAssToMembers", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSysAPI.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Librarian", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Library", "Library")
                        .WithMany("Librarians")
                        .HasForeignKey("LibraryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Member", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Librarian", null)
                        .WithMany("Members")
                        .HasForeignKey("LibrarianId");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Membership", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Library", "Libraries")
                        .WithMany("Memberships")
                        .HasForeignKey("LibraryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSysAPI.Models.Member", "Members")
                        .WithMany("Memberships")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libraries");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Staff", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Member", "Member")
                        .WithMany("Staffs")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Student", b =>
                {
                    b.HasOne("LibraryManagementSysAPI.Models.Member", "Member")
                        .WithMany("Students")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Librarian", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Library", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Librarians");

                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("LibraryManagementSysAPI.Models.Member", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Staffs");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
